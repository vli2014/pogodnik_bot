import telebot
import requests
from tokens import TG_API as BOT_TOKEN, OWHL_API as OPENWEATHER_API_KEY

bot = telebot.TeleBot(BOT_TOKEN)
BASE_URL = "http://api.openweathermap.org/data/2.5/weather"


def get_weather(city): #–ø–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–≥–æ–¥—ã
    params = {
        'q': city,
        'appid': OPENWEATHER_API_KEY,
        'units': 'metric',
        'lang': 'ru'
    }
    
    try:
        response = requests.get(BASE_URL, params=params)
        
        if response.status_code == 200: #–µ—Å–ª–∏ –≤—Å–µ —Ö–æ—Ä–æ—à–æ, —Ç–æ –ø–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ
            data = response.json()

            city_name = data['name'] #–Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞
            temp = round(data['main']['temp']) #—Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤ –≥—Ä–∞–¥—É—Å–∞—Ö –ø–æ –¶–µ–ª—å—Å–∏—é
            feels_like = round(data['main']['feels_like']) #–æ–∫—Ä—É–≥–ª–µ–Ω–∏–µ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã, –æ—â—É—â–µ–Ω–∏—è
            description = data['weather'][0]['description'].capitalize() #–æ–ø–∏—Å–∞–Ω–∏–µ –ø–æ–≥–æ–¥—ã
            pressure = data['main']['pressure'] #–¥–∞–≤–ª–µ–Ω–∏–µ –≤ –≥–µ–∫—Ç–æ–ü–∞—Å–∫–∞–ª—è—Ö
            humidity = data['main']['humidity'] #–≤–ª–∞–∂–Ω–æ—Å—Ç—å –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö
            wind_speed = round(data['wind']['speed']) #—Å–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞
            
            result = [
                f"**–ü–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ {city_name} —Å–µ–π—á–∞—Å:**",
                "",
                f"üå°Ô∏è **–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞:** {temp}¬∞C (–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: {feels_like}¬∞C)",
                f"‚òÅÔ∏è **–°–æ—Å—Ç–æ—è–Ω–∏–µ:** {description}",
                f"üí® **–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞:** {wind_speed} –º/—Å",
                f"üíß **–í–ª–∞–∂–Ω–æ—Å—Ç—å:** {humidity}%",
                f"üß≠ **–î–∞–≤–ª–µ–Ω–∏–µ:** {pressure} –≥–ü–∞" 
            ]
            
            return "\n".join(result)#–æ—Ç–≤–µ—Ç
        
        elif response.status_code == 404: #–µ—Å–ª–∏ –±—Ä–∞—Ç–æ–∫ —Ñ–∏–≥–Ω—è –ø–æ–ª—É—á–∏–ª–∞—Å—å
            return f"–ì–æ—Ä–æ–¥ **{city}** –Ω–µ –Ω–∞–π–¥–µ–Ω."
        
        else:
            return f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ. –ö–æ–¥ –æ—à–∏–±–∫–∏: {response.status_code}."
            
    except requests.exceptions.RequestException:
        return "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Å–µ—Ç–µ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞." #–Ω–∏—Ñ–∏–≥–∞ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}") 
        return "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö."#—Ç–æ–∂–µ —Å–∞–º–æ–µ, –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞


@bot.message_handler(commands=['start']) #–∞–±—Ä–∞–±–æ—á–µ–∫ start
def start(message):
    welcome_message = (
        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –ø–æ–≥–æ–¥—ã.\n"
        "–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É, –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏: \n"
        "**/weather –≥–æ—Ä–æ–¥** (–Ω–∞–ø—Ä–∏–º–µ—Ä, /weather –í–ª–∞–¥–∏–º–∏—Ä)"
    )
    bot.send_message(message.chat.id, welcome_message, parse_mode='Markdown') #–æ—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è

@bot.message_handler(commands=['weather']) #–æ–±—Ä–∞–±–æ—Ç—á–∏–∫ weather
def weather(message):
    sent_message_id = None
    
    try:
        parts = message.text.split(maxsplit=1)
        if len(parts) < 2: #–µ—Å–ª–∏ —ç—Ç–æ—Ç –¥–µ–±–∏–ª –æ—Ç–ø—Ä–∞–≤–∏–ª —Ç–æ–ª—å–∫–æ –∫–æ–º–∞–Ω–¥—É
            bot.send_message(
                message.chat.id, 
                "–ü–æ–ª—å–∑—É–π—Å—è: **/weather –≥–æ—Ä–æ–¥**",
                parse_mode='Markdown'
            )
            return
            
        city = parts[1].strip()
        
        #–≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        sent_message = bot.send_message(message.chat.id, f"–ò—â—É –ø–æ–≥–æ–¥—É –≤ –≥–æ—Ä–æ–¥–µ **{city}**...", parse_mode='Markdown')
        sent_message_id = sent_message.message_id
        
        #–∞–ª–µ –Ω–∞–º –¥–∞–¥—É—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç?
        result = get_weather(city)

        #—É–¥–∞–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        try:
            bot.delete_message(message.chat.id, sent_message_id)
        except Exception:
            pass
            
        bot.send_message(
            chat_id=message.chat.id, 
            text=result, 
            parse_mode='Markdown' 
        ) #–æ—Ç–ø—Ä–∞–≤–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
        
    except Exception:
        error_text = "‚ùå –ò–∑–≤–∏–Ω–∏, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã." #–µ—Å–ª–∏ –∫–∞–∫–∞—è-—Ç–æ –æ—à–∏–±–∫–∞
        bot.send_message(message.chat.id, error_text)

@bot.message_handler(commands=['info'])
def info(message):
    bot.send_message(message.chat.id, "–ü–æ–≥–æ–¥–Ω–∏–∫ 1.1, –∏—Å–ø–æ–ª—å–∑—É—é OpenWeatherMap API.", parse_mode="Markdown")

@bot.message_handler(commands=['help', 'commands'])
def help(message):
    bot.send_message(message.chat.id, """
–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥:

**/help**, **/commands** - —Å–ø–∏—Å–æ–∫ –∫–æ–º–º–∞–Ω–¥
**/start** - –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
**/weather** - –ø–æ–≥–æ–¥–∞
**/info** - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ
""", parse_mode='Markdown')

@bot.message_handler(func=lambda message: True)
def other(message):
    bot.send_message(message.chat.id, "–ù–µ—É—á, —Ç—ã —á–µ –ø–∏—à–µ—à—å? –Ø –∑–Ω–∞—é —Ç–æ–ª—å–∫–æ **/weather** –∏ **/start**", parse_mode='Markdown')


bot.infinity_polling()